!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUF_LEN	utils.h	13;"	d
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -c$/;"	m
CR	utils.h	25;"	d
CRLF	utils.h	24;"	d
DEBUG_FLAGS	Makefile	/^DEBUG_FLAGS = -g -Wall -DSWS_DEBUG$/;"	m
DEBUG_INFO	utils.h	16;"	d
DEBUG_INFO	utils.h	18;"	d
DEFAULT_FILE	config.h	8;"	d
False	utils.h	22;"	d
LF	utils.h	26;"	d
LOG_DEBUG	log.h	16;"	d
LOG_ERROR	log.h	13;"	d
LOG_FATAL	log.h	12;"	d
LOG_INFO	log.h	15;"	d
LOG_WARN	log.h	14;"	d
Malloc	memory_poll.c	/^Malloc(size_t size)$/;"	f
OBJ	Makefile	/^OBJ = SWS.o log.o utils.o socket.o config.o interaction.o deal_connect.o$/;"	m
SRC	Makefile	/^SRC = src\/$/;"	m
SWS_BUF_LEN	interaction.h	12;"	d
SWS_CLOSE	socket.h	26;"	d
SWS_LOG_PATH	log.h	18;"	d
SWS_MAXEVENTS	interaction.h	15;"	d
SWS_QUEUE_LEN	interaction.h	13;"	d
SWS_READED	socket.h	25;"	d
SWS_READ_TIMEO	socket.h	19;"	d
SWS_RWTIME	socket.h	23;"	d
SWS_TIMEOUT	socket.h	21;"	d
SWS_WRITED	socket.h	27;"	d
SWS_WRITE_TIMEO	socket.h	20;"	d
SWS_addr	config.c	/^const char *SWS_addr;$/;"	v
SWS_buf	interaction.c	/^static struct SWS_buf_t *SWS_buf; $/;"	v	typeref:struct:SWS_buf_t	file:
SWS_buf_t	interaction.h	/^struct SWS_buf_t {$/;"	s
SWS_cpu_time	deal_connect.c	/^SWS_cpu_time()$/;"	f
SWS_cpu_time	test.c	/^SWS_cpu_time()$/;"	f
SWS_echo_interation	interaction.c	/^SWS_echo_interation(int connfd)$/;"	f
SWS_end_flag	interaction.c	/^int SWS_end_flag = 0;$/;"	v
SWS_error_log	config.c	/^const char *SWS_error_log;$/;"	v
SWS_get_config	config.c	/^SWS_get_config()$/;"	f
SWS_handler_t	SWS.h	/^typedef void (*SWS_handler_t)(int signo); $/;"	t
SWS_listen	socket.c	/^SWS_listen(const int port, const char *address)$/;"	f
SWS_lock_init	deal_connect.c	/^SWS_lock_init()$/;"	f
SWS_lock_release	deal_connect.c	/^SWS_lock_release()$/;"	f
SWS_lock_wait	deal_connect.c	/^SWS_lock_wait()$/;"	f
SWS_log_debug	log.c	/^SWS_log_debug(const char *format, ...)$/;"	f
SWS_log_end	log.c	/^SWS_log_end()$/;"	f
SWS_log_error	log.c	/^SWS_log_error(const char *format, ...)$/;"	f
SWS_log_fatal	log.c	/^SWS_log_fatal(const char *format, ...)$/;"	f
SWS_log_fd	log.c	/^static int SWS_log_fd = 0;$/;"	v	file:
SWS_log_fp	log.c	/^static FILE *SWS_log_fp = NULL;$/;"	v	file:
SWS_log_info	log.c	/^SWS_log_info(const char *format, ...)$/;"	f
SWS_log_init	log.c	/^SWS_log_init()$/;"	f
SWS_log_to_file	log.c	/^SWS_log_to_file(int level, const char *log)$/;"	f	file:
SWS_log_warn	log.c	/^SWS_log_warn(const char *format, ...)$/;"	f
SWS_port	config.c	/^int SWS_port;$/;"	v
SWS_process_num	config.c	/^int SWS_process_num;$/;"	v
SWS_read	socket.c	/^SWS_read(int fd, struct SWS_buf_t **b)$/;"	f
SWS_read_request_line	socket.c	/^SWS_read_request_line(int fd, void *vptr, size_t maxlen)$/;"	f
SWS_request_body	config.c	/^int SWS_request_body;$/;"	v
SWS_request_header	config.c	/^int SWS_request_header; $/;"	v
SWS_sig_child	SWS.c	/^sig_atomic_t SWS_sig_child;$/;"	v
SWS_sig_handler	SWS.c	/^SWS_sig_handler(int signo)$/;"	f
SWS_sig_quit	SWS.c	/^sig_atomic_t SWS_sig_quit; $/;"	v
SWS_sig_t	SWS.h	/^struct SWS_sig_t {$/;"	s
SWS_signals	SWS.c	/^struct SWS_sig_t SWS_signals[] = {$/;"	v	typeref:struct:SWS_sig_t
SWS_str_cmp3	utils.h	28;"	d
SWS_str_cmp4	utils.h	30;"	d
SWS_str_cmp5	utils.h	32;"	d
SWS_str_cmp6	utils.h	35;"	d
SWS_str_cmp7	utils.h	38;"	d
SWS_str_cmp8	utils.h	41;"	d
SWS_timeout	socket.c	/^SWS_timeout(int fd, int sec, int rwflag)$/;"	f
SWS_wait_worker	deal_connect.c	/^SWS_wait_worker()$/;"	f
SWS_web_root	config.c	/^const char *SWS_web_root;$/;"	v
SWS_web_start	deal_connect.c	/^SWS_web_start()$/;"	f
SWS_worker	deal_connect.c	/^struct SWS_worker_t *SWS_worker;$/;"	v	typeref:struct:SWS_worker_t
SWS_worker_exit	deal_connect.c	/^SWS_worker_exit()$/;"	f
SWS_worker_init	deal_connect.c	/^SWS_worker_init(int i, int listenfd)$/;"	f
SWS_worker_t	deal_connect.h	/^struct SWS_worker_t {$/;"	s
SWS_worker_wait_connect	deal_connect.c	/^SWS_worker_wait_connect(int i, int listenfd)$/;"	f
SWS_write	socket.c	/^SWS_write(int fd, struct SWS_buf_t **b)$/;"	f
TARGET	Makefile	/^TARGET = SWS$/;"	m
True	utils.h	21;"	d
_CONFIG_H	config.h	2;"	d
_DEAL_CONNECT_H	deal_connect.h	2;"	d
_INTERACTION_H	interaction.h	2;"	d
_LOG_H	log.h	2;"	d
_MEMORY_POLL_H	memory_poll.h	2;"	d
_SOCKET_H	socket.h	2;"	d
_SWS_H	SWS.h	2;"	d
_UTILS_H	utils.h	2;"	d
apply_memory_block	memory_poll.c	/^apply_memory_block(size_t size)$/;"	f
begin	memory_poll.h	/^	void *begin;	$/;"	m	struct:memory_poll_block
begin	memory_poll.h	/^	void *begin;$/;"	m	struct:memory_unit
block_head	memory_poll.c	/^static struct memory_poll_block *block_head = NULL; $/;"	v	typeref:struct:memory_poll_block	file:
block_length	memory_poll.h	7;"	d
buf	interaction.h	/^	char buf[SWS_BUF_LEN];$/;"	m	struct:SWS_buf_t
count	deal_connect.h	/^	int count;$/;"	m	struct:SWS_worker_t
end	interaction.h	/^	char *end;$/;"	m	struct:SWS_buf_t
err_exit	utils.c	/^err_exit(const char *str)$/;"	f
err_exit1	utils.c	/^err_exit1(const char *format, ...)$/;"	f
err_info	utils.c	/^err_info(const char *str)$/;"	f
free	memory_poll.h	/^	struct memory_unit *free;$/;"	m	struct:memory_poll_block	typeref:struct:memory_poll_block::memory_unit
handler	SWS.h	/^	SWS_handler_t handler;$/;"	m	struct:SWS_sig_t
main	SWS.c	/^main(int argc, char *argv[])$/;"	f
main	test.c	/^main()$/;"	f
memory_malloc	memory_poll.c	/^memory_malloc(size_t size)$/;"	f
memory_poll_block	memory_poll.h	/^struct memory_poll_block {$/;"	s
memory_poll_free	memory_poll.c	/^memory_poll_free()$/;"	f
memory_poll_init	memory_poll.c	/^memory_poll_init()$/;"	f
memory_unit	memory_poll.h	/^struct memory_unit {$/;"	s
mptr	deal_connect.c	/^static pthread_mutex_t *mptr;$/;"	v	file:
next	memory_poll.h	/^	struct memory_poll_block *next;$/;"	m	struct:memory_poll_block	typeref:struct:memory_poll_block::memory_poll_block
pid	deal_connect.h	/^	pid_t pid;$/;"	m	struct:SWS_worker_t
signo	SWS.h	/^	int signo;	$/;"	m	struct:SWS_sig_t
size	memory_poll.h	/^	size_t size;$/;"	m	struct:memory_unit
start	interaction.h	/^	char *start;$/;"	m	struct:SWS_buf_t
user_exit	utils.c	/^user_exit(const char *str)$/;"	f
user_exit1	utils.c	/^user_exit1(const char *format, ...)$/;"	f
user_info	utils.c	/^user_info(const char *str)$/;"	f
user_info1	utils.c	/^user_info1(const char *format, ...)$/;"	f
